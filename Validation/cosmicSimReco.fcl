#
# generate and simulate cosmics in 1 stage (field off), and reconstruct in the CRV
#
#include "Offline/fcl/standardServices.fcl"
#include "Offline/EventGenerator/fcl/prolog.fcl"
#include "Production/JobConfig/common/prolog.fcl"
#include "Production/JobConfig/primary/prolog.fcl"
#include "Production/JobConfig/digitize/prolog.fcl"
#include "Production/JobConfig/cosmic/prolog.fcl"
#include "Production/JobConfig/reco/prolog.fcl"

process_name : cosmicSimReco

source : {
  module_type :EmptyEvent
  firstRun: 1200
}
services : @local::Services.Sim

physics: {
  producers : {
    @table::Common.producers
    @table::Primary.producers
    @table::Digitize.producers
    @table::Reconstruction.producers
    cosmicTimeOffset : {
      @table::Cosmic.cosmicTimeOffset
      cosmicModuleLabel : "generate"
    }
    generate : @local::Cosmic.generateCRY
  }
  filters : {
    @table::Common.filters
    @table::Primary.filters
    @table::Digitize.filters
    @table::Reconstruction.filters
    # override the DetStep filter to select CRV
    PrimaryFilter : {
      module_type : DetectorStepFilter
      StrawGasSteps : [ ]
      CaloShowerSteps : [ ]
      CrvSteps : [ "CrvSteps" ]
      MinimumTrkStepEnergy : 1.0e-6 # 1 ev
      MinimumCaloStepEnergy : 0.0
      MinimumCrvStepEnergy : 1.0e-6 # get a real value from CRV experts FIXME!
      MinimumPartMom : 50.0 # MeV/c
      MaximumPartMom : 1.0e6 # MeV/c
      KeepPDG : [ ] # Loop at steps from all particle types
      MinimumTrkSteps : 0 # primary must produce at least this many TrkSteps
      MinimumSumCaloStepE : 0.0 # or at least this much calo energy
    }
  }
  analyzers: {
    @table::Common.analyzers
    @table::Primary.analyzers
    @table::Digitize.analyzers
    @table::Reconstruction.analyzers
  }

  TriggerPath : [
    @sequence::Common.generateSequence,
    cosmicTimeOffset,
    @sequence::Common.g4Sequence,
    @sequence::Primary.PrimarySequence,
    @sequence::Digitize.DigitizeSequence,
    @sequence::Reconstruction.NoFieldMCPath
  ]
  EndPath : [ @sequence::Primary.EndSequence,
    #    @sequence::Digitize.EndSequence,
    #    @sequence::Reconstruction.EndSequence,
    Output
  ]
  trigger_paths : [ TriggerPath ]
  end_paths : [ EndPath ]
}
#physics.analyzers.KLCompressionCheck.SelectEvents : [ "TriggerPath" ]

outputs : {
  Output : {
    module_type : RootOutput
    SelectEvents : [ TriggerPath ]
    fileName    : @nil
    outputCommands : [
      "drop *_*_*_*",
      @sequence::Reconstruction.GeneralProducts,
      @sequence::Reconstruction.GeneralMCProducts,
      @sequence::Reconstruction.HighRecoProducts,
      @sequence::Reconstruction.HighRecoMCProducts,
      @sequence::Reconstruction.MidRecoProducts,
      @sequence::Digitize.GeneralProducts,
      @sequence::Digitize.GeneralMCProducts,
      @sequence::Digitize.DigiProducts,
      @sequence::Digitize.TriggerProducts,
      @sequence::Digitize.MCDigiProducts,
      @sequence::Primary.StepProducts,
      "drop mu2e::Crv*_*_*_*",
      "drop *_*_cosmicTimeMap_*",
      "drop *_g4run_*_*",
      "drop mu2e::StepPointMCs_*_CRV_*",
      "drop mu2e::SimParticleart::Ptrmu2e::MCTrajectorystd::map_*_*_*",
      "drop *_compressDetStepMCs_*_*",
      "drop *_compressDigiMCs_*_*",
      "drop *_FindMCPrimary_*_*",
      "drop mu2e::CaloDigis_CaloDigiMaker_*_*",
      "drop mu2e::StrawDigiADCWaveforms_makeSD_*_*",
      "drop mu2e::StrawDigis_makeSD_*_*",
      "keep mu2e::CaloShowerSteps_compressDigiMCs_*_*",
      "keep mu2e::StatusG4_*_*_*"
    ]
  }
}
# fix MakeSS config (overwritten by digi, reco)
physics.producers.MakeSS : {
  @table::CommonMC.MakeSS
  VDStepPointMCs : "g4run:virtualdetector"
  AbsorberStepPointMCs : "g4run:protonabsorber"
  TargetStepPointMCs : "g4run:stoppingtarget"
}

#include "Production/JobConfig/primary/epilog.fcl"
#include "Production/JobConfig/digitize/epilog.fcl"
#include "Production/JobConfig/reco/epilog.fcl"
physics.analyzers.digiCompressionCheck.SelectEvents : [ TriggerPath ]
physics.analyzers.recoCompressionCheck.SelectEvents : [ TriggerPath ]
physics.producers.FindMCPrimary.PrimaryGenIds: ["CosmicCRY"]

# set the event timing for OffSpill
physics.producers.EWMProducer.SpillType : 0
# nofield geometry
services.GeometryService.bFieldFile : "Offline/Mu2eG4/geom/bfgeom_no_field.txt"
# print summaries
services.scheduler.wantSummary: true
services.TimeTracker.printSummary: true

# g4 config
#physics.producers.g4run.TrajectoryControl: @local::mu2eg4NoTrajectories
physics.producers.g4run.inputs.primaryTag : cosmicTimeOffset
physics.producers.g4run.Mu2eG4CommonCut: @local::Cosmic.Mu2eG4CommonCutCosmicNoField
physics.producers.g4run.physics.minRangeCut : 1.0 // mm
# stop showers outside the detector
physics.producers.g4run.Mu2eG4CommonCut: @local::Cosmic.Mu2eG4CommonCutCosmicNoField

# only simulate CRV
#physics.producers.g4run.SDConfig.enableSD : [ CRV ]

physics.producers.CrvPhotons.crvStepModuleLabels  : ["CrvSteps"]
physics.producers.CrvPhotons.crvStepProcessNames  : ["cosmicSimReco"]

physics.producers.makeSD.StrawGasStepModules : [ "StrawGasStepMaker" ]
physics.producers.CaloShowerROMaker.caloShowerStepCollection : [ "CaloShowerStepMaker" ]
# turn off very verbose
physics.producers.CrvCoincidence.verboseLevel : 0
physics.producers.CrvCoincidenceClusterFinder.verboseLevel : 0

# histogram file
services.TFileService.fileName : "nts.owner.val-cosmicSimReco.dsconf.seq.root"
# art file
outputs.Output.fileName : "mcs.owner.val-cosmicSimReco.dsconf.seq.art"

# run 1h by default
source.maxEvents: 50000

# Initialze seeding of random engines
services.SeedService.baseSeed         :  8
#include "Production/Validation/database.fcl"
