#
#  core digitization configuration.  This gets specialized by combining it with digitization-type specific
#  configuration (OnSpill, OffSpill, Extracted, ...)
#
#include "Production/JobConfig/common/prolog.fcl"
#include "Production/JobConfig/digitize/prolog.fcl"
# name all processes the same, to mask any provenance in ensemble creation
process_name: Digitize
source : { module_type : RootInput }
services : @local::Services.SimAndReco # reco is needed for the trigger
physics : {
  producers : { @table::Digitize.producers }
  filters: { @table::Digitize.filters }
  analyzers: { @table::Digitize.analyzers }
  # define the digitization paths.  Trigger paths are added specific to digitization type
  DigitizePath : @local::Digitize.DigitizeSequence
  TriggerablePath : [ @sequence::Digitize.DigitizeSequence, @sequence::Digitize.TriggerableSequence ]
  TriggerableCHPath : [ @sequence::Digitize.DigitizeSequence, @sequence::Digitize.TriggerableCHSequence ]
  TriggerableTwoTrackPath : [ @sequence::Digitize.DigitizeSequence, @sequence::Digitize.TriggerableTwoTrackSequence ]
  # define the trigger sequences and paths
  @table::TrigRecoSequences
  @table::TrigSequences
}
# define output streams
outputs : @local::Digitize.Outputs
physics.EndPath : @local::Digitize.EndPath
physics.end_paths : [ EndPath ]
#
# Final configuration
#
#include "Production/JobConfig/common/epilog.fcl"
#include "Production/JobConfig/digitize/epilog.fcl"
#include "mu2e-trig-config/core/trigDigiInputsEpilog.fcl"
# the following is a default placeholder
#include "Production/Validation/database.fcl"
