#
# Re-sample 'electron' and 'muon' beam entering the DS, propagate them to VD101, and write out the events with SimParticles and StepPointMCs travelling through VD101 only.
#
# Original author: Yuri Oksuzian, 2019
# Updated for MDC2020 (DetectorSteps): D. Brown
# Updated for STM studies: P. Plesniak

#include "Offline/fcl/standardServices.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"
#include "Production/JobConfig/common/prolog.fcl"
#include "Production/JobConfig/pileup/prolog.fcl"
#include "Offline/Analyses/fcl/prolog.fcl"
#include "Offline/STMMC/fcl/prolog.fcl"

process_name: BeamToVD101

source : {
  module_type : EmptyEvent
  maxEvents : @nil
}

services : @local::Services.Sim
physics: {
  producers : {
    @table::Common.producers
    @table::Pileup.producers
    # TODO BEFORE NEXT CAMPAIGN - add the compressPhysicalVolumes module here with the new filter module label corresponding to filtering out the VD hits.
    extractVD101 : {
      # Creates "mu2e::StepPointMCs_extractVD101__BeamToVD101" objects that only store StepPointMCs in VD101. Will create empty collections if no hits are found -> filter required.
      module_type : STMResamplingProducer
      StepPointMCsTag : @local::ResamplingProducer.StepPointMCsTag
      VirtualDetectorID : @local::ResamplingProducer.VirtualDetectorID
      verbose : @local::ResamplingProducer.verbose
    } 
    compressDetStepMCsSTM : {
      # Creates "mu2e::SimParticlemv_compressDetStepMCsSTM__BeamToVD101" and "mu2e::StepPointMCs_compressDetStepMCsSTM__BeamToVD101" objects
      # from "mu2e::StepPointMCs_extractVD101_virtualdetector_BeamToVD101" objects that only keep SimParticles and StepPointMCs going through VD101.
      # This removes the SimParticles that do not go through VD101, as this is the largest contributor to the data volume with this study.
      module_type : CompressDetStepMCs
      strawGasStepTag : ""
      caloShowerStepTag : ""
      surfaceStepTag : ""
      crvStepTag : ""
      simParticleTags : [ "g4run" ]
      debugLevel : 0
      stepPointMCTags : [ "extractVD101" ] # extractVD101 was g4run
      compressionOptions : {
        strawGasStepCompressionLevel: "noCompression"
        caloShowerStepCompressionLevel: "noCompression"
        crvStepCompressionLevel: "noCompression"
        surfaceStepCompressionLevel: "noCompression"
        stepPointMCCompressionLevel : "noCompression"
        keepNGenerations : 1 # only keep SimParticles producing DetectorSteps and their direct parents
       	simParticleCompressionLevel : "noCompression"
       	stepPointMCCompressionLevel : "noCompression"
       	keepNGenerations : -1
       	mcTrajectoryCompressionLevel : "noCompression"
      }
      mcTrajectoryTag : "" # no MC Trajectories
    }
  }
  filters : {
    @table::Common.filters
    @table::Pileup.filters
    # TODO BEFORE NEXT CAMPAIGN - add the FilterG4Out module here with the main inputs to keep being g4run:virtualdetector.
    VD101Filter: {
      # Filters events based on the size of "mu2e::StepPointMCs_compressDetStepMCsSTM__BeamToVD101" - if there are no StepPointMCs in VD101, the event is not kept.
      # Required as extractVD101 will create a StepPointMCCollection even if the collection is empty.
      module_type: STMResamplingFilter
      StepPointMCsTag : @local::ResamplingFilter.StepPointMCsTag
      verbose : @local::ResamplingFilter.verbose
    }
  }
  analyzers : {
    @table::Common.analyzers
    countVDs : {
      # Runs a counter over mu2e::StepPointMCs_g4run_virtualdetector_* for the purposes of keeping track of hits - this event is rare with a geometric acceptance of approx E-8.
      module_type : CountVDHits
      StepPointMCsTag : "g4run:virtualdetector"
      enableVDs : [88, 89, 90, 100, 101]
    }
  }
  # setup paths
  STMCompressedPath : [ @sequence::Pileup.beamResamplerSequence, @sequence::Common.g4Sequence, extractVD101, compressDetStepMCsSTM, VD101Filter ]
  trigger_paths: [ STMCompressedPath ]
  outPathCompressed : [ countVDs, genCountLogger, CompressedOutput ]
  end_paths: [outPathCompressed]
}

outputs: {

  CompressedOutput : {
    module_type: RootOutput
    outputCommands:   [
      "drop *_*_*_*",
      "keep art::EventIDs_*_*_*",
      "keep mu2e::GenParticles_*_*_*",
      "keep mu2e::GenEventCount_*_*_*", 
      "keep mu2e::StepPointMCs_compressDetStepMCsSTM_*_*",
      "keep mu2e::SimParticlemv_compressDetStepMCsSTM_*_*",
      "keep mu2e::SimTimeOffset_*_*_*",
      "keep mu2e::PhysicalVolumeInfomvs_g4run_*_*"
    ]
    SelectEvents: [STMCompressedPath]
    fileName : "dts.plesniak.CompressedSTMData.version.sequencer.art"
  }
}
# Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.inputs: {
  primaryType: "StepPoints"
  primaryTag: "beamResampler:Beam"
  inputMCTrajectories: ""
  simStageOverride: 1
  inputPhysVolumeMultiInfo: "beamResampler"
  updateEventLevelVolumeInfos: {
    input: "beamResampler:eventlevel"
    outInstance: "eventlevel"
  }
}
# copy over VD hits
physics.producers.g4run.SDConfig.preSimulatedHits:  ["beamResampler:virtualdetector"]
#include "Production/JobConfig/common/MT.fcl"
#include "Production/JobConfig/common/epilog.fcl"
#include "Production/JobConfig/pileup/epilog.fcl"

physics.producers.g4run.SDConfig.enableSD: [virtualdetector]
physics.producers.g4run.Mu2eG4CommonCut: {}